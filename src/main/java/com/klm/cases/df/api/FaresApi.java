/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.24).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Fare;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-11-25T10:47:55.767Z")

@Validated
@Api(value = "fares", description = "the fares API")
@RequestMapping(value = "/api-v1")
public interface FaresApi {

    @ApiOperation(value = "Get calculated fare", nickname = "getFare", notes = "", response = Fare.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "KLM", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success response - Calculated fare for given origin and destination", response = Fare.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/fares",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fare> getFare(@NotNull @ApiParam(value = "airport code", required = true) @Valid @RequestParam(value = "origin_code", required = true) String originCode,@NotNull @ApiParam(value = "airport code", required = true) @Valid @RequestParam(value = "destination_code", required = true) String destinationCode,@ApiParam(value = "the requested resulting currency, supported ones are EUR and USD  (default: EUR)") @Valid @RequestParam(value = "currency", required = false) String currency);

}
